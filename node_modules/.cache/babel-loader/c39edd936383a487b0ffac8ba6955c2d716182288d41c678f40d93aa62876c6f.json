{"ast":null,"code":"import ContactSearch from './ContactSearch';\nimport VueSelect from 'vue-select';\nimport 'flatpickr/dist/flatpickr.css';\nimport FlatPickr from 'vue-flatpickr-component';\n// import { createRecords } from '../services/appointmentsService';\nexport default {\n  props: ['record', \"contacts\", \"agents\"],\n  components: {\n    ContactSearch,\n    VueSelect,\n    flatPickr: FlatPickr\n  },\n  data() {\n    return {\n      selectedContact: null,\n      appointmentAddress: null,\n      selectedAgent: null,\n      appointmentDate: '',\n      selectedContactId: null,\n      config: {\n        enableTime: true,\n        time_24hr: true\n      }\n    };\n  },\n  mounted() {\n    console.log(this.contacts);\n    console.log(this.record.fields.contact_id[0]);\n    if (this.contacts && this.record.fields.contact_id) {\n      const contact = this.contacts.find(contact => contact.id === this.record.fields.contact_id[0]);\n      console.log(contact);\n      if (contact) {\n        this.selectedContactId = contact.id;\n        this.selectedContact = contact;\n      }\n    }\n  },\n  computed: {\n    agentList() {\n      return this.agents.map(agent => ({\n        id: agent.id,\n        label: `${agent.fields.agent_name} ${agent.fields.agent_surname}`\n      }));\n    }\n  },\n  methods: {\n    setContact(contact) {\n      this.selectedContact = contact;\n    },\n    async submitAppointment() {\n      console.log('tst');\n    }\n  }\n};","map":{"version":3,"names":["ContactSearch","VueSelect","FlatPickr","props","components","flatPickr","data","selectedContact","appointmentAddress","selectedAgent","appointmentDate","selectedContactId","config","enableTime","time_24hr","mounted","console","log","contacts","record","fields","contact_id","contact","find","id","computed","agentList","agents","map","agent","label","agent_name","agent_surname","methods","setContact","submitAppointment"],"sources":["src/components/EditAppointmentModal.vue"],"sourcesContent":["<template>\n    <div class=\"appointment-modal\">\n        <b-modal hide-backdrop :id=\"'appointment-modal-' + record.id\" hide-header-close header-class=\"d-block\"\n            content-class=\"grey-background\">\n            <template #modal-header=\"{}\">\n                <div class=\"text-center\">\n\n                    <b-icon class=\"me-2\" icon=\"calendar-plus\" font-scale=\"1.1\"></b-icon>\n                </div>\n            </template>\n            <div class=\"search-contact-area\">\n                <ContactSearch :contacts=\"contacts\" @setContact=\"setContact\" :selectedContactId=\"selectedContactId\" />\n            </div>\n            <div class=\"appointment-address-input-area mt-3\">\n                <b-form-input type=\"text\" v-model=\"appointmentAddress\" placeholder=\"Address\"></b-form-input>\n            </div>\n            <div class=\"status-select-box-area mt-3\">\n                <VueSelect multiple v-model=\"selectedAgent\" :options=\"agentList\" placeholder=\"Agent\" />\n            </div>\n            <div class=\"date-selector-area mt-3\">\n                <flat-pickr :model-value=\"appointmentDate\" :config=\"config\"\n                    @update:modelValue=\"appointmentDate = $event\" class=\"form-control\"></flat-pickr>\n            </div>\n            <div class=\"submit-button-area mt-3 text-end\">\n                <b-button variant=\"primary\" @click=\"submitAppointment\">Submit</b-button>\n            </div>\n        </b-modal>\n    </div>\n</template>\n\n<script>\nimport ContactSearch from './ContactSearch';\nimport VueSelect from 'vue-select';\nimport 'flatpickr/dist/flatpickr.css';\nimport FlatPickr from 'vue-flatpickr-component';\n// import { createRecords } from '../services/appointmentsService';\nexport default {\n    props: ['record', \"contacts\", \"agents\"],\n    components: {\n        ContactSearch,\n        VueSelect,\n        flatPickr: FlatPickr,\n    },\n    data() {\n        return {\n            selectedContact: null,\n            appointmentAddress: null,\n            selectedAgent: null,\n            appointmentDate: '',\n            selectedContactId: null,\n            config: {\n                enableTime: true,\n                time_24hr: true,\n            },\n        };\n    },\n    mounted() {\n        console.log(this.contacts);\n        console.log(this.record.fields.contact_id[0]);\n        if (this.contacts && this.record.fields.contact_id) {\n            const contact = this.contacts.find(contact => contact.id === this.record.fields.contact_id[0]);\n            console.log(contact);\n            if (contact) {\n                this.selectedContactId = contact.id;\n                this.selectedContact = contact;\n            }\n        }\n    },\n    computed: {\n        agentList() {\n            return this.agents.map(agent => ({\n                id: agent.id,\n                label: `${agent.fields.agent_name} ${agent.fields.agent_surname}`,\n            }));\n        },\n    },\n    methods: {\n        setContact(contact) {\n            this.selectedContact = contact;\n        },\n        async submitAppointment() {\n            console.log('tst');\n        },\n    }\n};\n</script>"],"mappings":"AA+BA,OAAAA,aAAA;AACA,OAAAC,SAAA;AACA;AACA,OAAAC,SAAA;AACA;AACA;EACAC,KAAA;EACAC,UAAA;IACAJ,aAAA;IACAC,SAAA;IACAI,SAAA,EAAAH;EACA;EACAI,KAAA;IACA;MACAC,eAAA;MACAC,kBAAA;MACAC,aAAA;MACAC,eAAA;MACAC,iBAAA;MACAC,MAAA;QACAC,UAAA;QACAC,SAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,OAAA,CAAAC,GAAA,MAAAC,QAAA;IACAF,OAAA,CAAAC,GAAA,MAAAE,MAAA,CAAAC,MAAA,CAAAC,UAAA;IACA,SAAAH,QAAA,SAAAC,MAAA,CAAAC,MAAA,CAAAC,UAAA;MACA,MAAAC,OAAA,QAAAJ,QAAA,CAAAK,IAAA,CAAAD,OAAA,IAAAA,OAAA,CAAAE,EAAA,UAAAL,MAAA,CAAAC,MAAA,CAAAC,UAAA;MACAL,OAAA,CAAAC,GAAA,CAAAK,OAAA;MACA,IAAAA,OAAA;QACA,KAAAX,iBAAA,GAAAW,OAAA,CAAAE,EAAA;QACA,KAAAjB,eAAA,GAAAe,OAAA;MACA;IACA;EACA;EACAG,QAAA;IACAC,UAAA;MACA,YAAAC,MAAA,CAAAC,GAAA,CAAAC,KAAA;QACAL,EAAA,EAAAK,KAAA,CAAAL,EAAA;QACAM,KAAA,KAAAD,KAAA,CAAAT,MAAA,CAAAW,UAAA,IAAAF,KAAA,CAAAT,MAAA,CAAAY,aAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,WAAAZ,OAAA;MACA,KAAAf,eAAA,GAAAe,OAAA;IACA;IACA,MAAAa,kBAAA;MACAnB,OAAA,CAAAC,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}