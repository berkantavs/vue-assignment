{"ast":null,"code":"export default {\n  props: ['agent'],\n  data() {\n    return {\n      isSelected: false\n    };\n  },\n  methods: {\n    toggleSelection() {\n      this.isSelected = !this.isSelected;\n      if (this.isSelected) {\n        this.$emit('selectedAgent', this.agent);\n      } else {\n        this.$emit('deselectedAgent', this.agent);\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","data","isSelected","methods","toggleSelection","$emit","agent"],"sources":["src/components/AgentAvatar.vue"],"sourcesContent":["<template>\n  <b-avatar v-b-tooltip.hover :title=\"agent.fields.agent_name + ' ' + agent.fields.agent_surname\" button :style=\"{\n    backgroundColor: agent.fields.color, transform: isSelected ? 'scale(0.9)' : 'scale(1)'\n  }\" class=\"agent-avatar-item\" @click=\"toggleSelection\">\n    <span class=\"text-white\">\n      {{ agent.fields.agent_name.charAt(0) }}{{ agent.fields.agent_surname.charAt(0) }}\n    </span>\n  </b-avatar>\n</template>\n\n<script>\nexport default {\n  props: ['agent'],\n  data() {\n    return {\n      isSelected: false,\n    }\n  },\n  methods: {\n    toggleSelection() {\n      this.isSelected = !this.isSelected;\n      if (this.isSelected) {\n        this.$emit('selectedAgent', this.agent);\n      } else {\n        this.$emit('deselectedAgent', this.agent);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.agent-avatar-item {\n  transition: transform 0.2s;\n}\n\n.agent-avatar-item:active {\n  transform: scale(0.9);\n}\n</style>\n"],"mappings":"AAWA;EACAA,KAAA;EACAC,KAAA;IACA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACAC,gBAAA;MACA,KAAAF,UAAA,SAAAA,UAAA;MACA,SAAAA,UAAA;QACA,KAAAG,KAAA,uBAAAC,KAAA;MACA;QACA,KAAAD,KAAA,yBAAAC,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}