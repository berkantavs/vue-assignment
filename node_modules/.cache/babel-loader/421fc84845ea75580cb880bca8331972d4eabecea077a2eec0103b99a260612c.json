{"ast":null,"code":"// import AgentAvatar from './AgentAvatar.vue';\n\nexport default {\n  // components: {\n  //     AgentAvatar\n  // },\n  props: ['record', \"index\"],\n  data() {\n    return {\n      recordStatus: '',\n      recordStatusColor: '',\n      recordRemainingText: ''\n    };\n  },\n  created() {\n    this.calculatePositiveHoursAndDays();\n  },\n  methods: {\n    calculatePositiveHoursAndDays() {\n      // İki tarih arasındaki pozitif saat ve günleri hesaplayacak fonksiyon\n      const start = new Date();\n      const end = new Date(this.record.fields.appointment_date);\n      let difference = end - start;\n      const millisecondsPerSecond = 1000;\n      const secondsPerMinute = 60;\n      const minutesPerHour = 60;\n      const hoursPerDay = 24;\n      let milliseconds = difference % millisecondsPerSecond;\n      difference = (difference - milliseconds) / millisecondsPerSecond;\n      let seconds = difference % secondsPerMinute;\n      difference = (difference - seconds) / secondsPerMinute;\n      let minutes = difference % minutesPerHour;\n      difference = (difference - minutes) / minutesPerHour;\n      let hours = difference % hoursPerDay;\n      let days = (difference - hours) / hoursPerDay;\n\n      // Negatif değerleri sıfıra çeviriyoruz\n      days = Math.max(0, days);\n      hours = Math.max(0, hours);\n\n      // recordRemainingText'i oluşturuyoruz\n      if (days > 0) {\n        this.recordRemainingText = `${days} days`;\n      } else if (days <= 0 && hours > 0) {\n        this.recordRemainingText = `${hours} hours `;\n      }\n\n      // recordStatus ve recordStatusColor'u ayarlıyoruz\n      const now = new Date();\n      if (this.record.fields.is_cancelled) {\n        this.recordStatus = 'Cancelled';\n        this.recordStatusColor = '#ff0000'; // Turuncu\n      } else if (end > now) {\n        this.recordStatus = 'Upcoming';\n        this.recordStatusColor = '#ffa500'; // Kırmızı\n      } else {\n        this.recordStatus = 'Completed';\n        this.recordStatusColor = '#008000'; // Yeşil\n      }\n    },\n    formatAppointmentDate(dateString) {\n      const date = new Date(dateString);\n      const day = String(date.getUTCDate()).padStart(2, '0');\n      const month = String(date.getUTCMonth() + 1).padStart(2, '0'); // getUTCMonth() 0-11 arası değer döner, bu yüzden +1 eklenir\n      const year = date.getUTCFullYear();\n      const hours = String(date.getUTCHours()).padStart(2, '0');\n      const minutes = String(date.getUTCMinutes()).padStart(2, '0');\n      return `${day}/${month}/${year} ${hours}:${minutes}`;\n    }\n  }\n};","map":{"version":3,"names":["props","data","recordStatus","recordStatusColor","recordRemainingText","created","calculatePositiveHoursAndDays","methods","start","Date","end","record","fields","appointment_date","difference","millisecondsPerSecond","secondsPerMinute","minutesPerHour","hoursPerDay","milliseconds","seconds","minutes","hours","days","Math","max","now","is_cancelled","formatAppointmentDate","dateString","date","day","String","getUTCDate","padStart","month","getUTCMonth","year","getUTCFullYear","getUTCHours","getUTCMinutes"],"sources":["src/components/AppointmentsListItem.vue"],"sourcesContent":["<template>\n    <div :class=\"['appointment-item', { 'grey-background': index % 2 === 0, 'white-background': index % 2 !== 0 }]\">\n        <b-row>\n            <b-col lg=\"3\">\n                <div class=\"contact-name mb-2\">\n                    <b-icon icon=\"person\" font-scale=\"1.1\" class=\"me-2\"></b-icon>\n                    <b> {{ record.fields.contact_name[0] + ' ' + record.fields.contact_surname[0] }}</b>\n                </div>\n\n                <div class=\"contact-mail mb-2\">\n                    <b-icon icon=\"mailbox\" font-scale=\"1.1\" class=\"me-2\"></b-icon>\n                    {{ record.fields.contact_email[0] }}\n                </div>\n\n                <div class=\"contact-phone mb-2\">\n                    <b-icon icon=\"phone\" font-scale=\"1.1\" class=\"me-2\"></b-icon>\n                    {{ record.fields.contact_phone[0] }}\n                </div>\n\n            </b-col>\n            <b-col lg=\"2\" class=\"appointment_address_container\">\n                <div class=\"appointment-address mb-2\">\n                    <b-icon icon=\"house-door\" font-scale=\"1.5\" class=\"me-2\"></b-icon>\n                    <b style=\"font-size: 15px;\">\n                        {{ record.fields.appointment_address }}</b>\n                </div>\n            </b-col>\n            <b-col lg=\"4\" class=\"appointment_address_container\">\n                <div class=\"appointment-status-box bg-primary\">\n                    <b-row class=\"m-0\">\n                        <b-col lg=\"6\" class=\"status-area text-center\">\n                            <span :style=\"'color:' + recordStatusColor\">\n                                {{ recordStatus }}\n                            </span>\n                            <span>\n                                {{ recordRemainingText }}\n                            </span>\n                        </b-col>\n                        <b-col lg=\"6\" class=\"date-area text-center\">\n                            <b-icon class=\"text-white\" font-scale=\"0.9\" icon=\"clock\"></b-icon>\n                            <span class=\"text-white ms-1\" style=\"font-size: 14px;\"> {{\n                                formatAppointmentDate(record.fields.appointment_date) }}</span>\n                        </b-col>\n                    </b-row>\n                </div>\n            </b-col>\n            <b-col lg=\"3\">\n                <!-- {{ calculatePositiveHoursAndDay }} -->\n                <!-- <div v-for=\"(agent, index) in agents.slice(0, 5)\" :key=\"index\" class=\"avatar-wrapper\">\n                    <AgentAvatar :agent=\"agent\" />\n                </div> -->\n            </b-col>\n        </b-row>\n    </div>\n</template>\n\n<script>\n// import AgentAvatar from './AgentAvatar.vue';\n\nexport default {\n    // components: {\n    //     AgentAvatar\n    // },\n    props: ['record', \"index\"],\n    data() {\n        return {\n            recordStatus: '',\n            recordStatusColor: '',\n            recordRemainingText: ''\n\n        }\n    },\n    created() {\n        this.calculatePositiveHoursAndDays()\n    },\n\n    methods: {\n        calculatePositiveHoursAndDays() {\n            // İki tarih arasındaki pozitif saat ve günleri hesaplayacak fonksiyon\n            const start = new Date();\n            const end = new Date(this.record.fields.appointment_date);\n\n            let difference = end - start;\n\n            const millisecondsPerSecond = 1000;\n            const secondsPerMinute = 60;\n            const minutesPerHour = 60;\n            const hoursPerDay = 24;\n\n            let milliseconds = difference % millisecondsPerSecond;\n            difference = (difference - milliseconds) / millisecondsPerSecond;\n            let seconds = difference % secondsPerMinute;\n            difference = (difference - seconds) / secondsPerMinute;\n            let minutes = difference % minutesPerHour;\n            difference = (difference - minutes) / minutesPerHour;\n            let hours = difference % hoursPerDay;\n            let days = (difference - hours) / hoursPerDay;\n\n            // Negatif değerleri sıfıra çeviriyoruz\n            days = Math.max(0, days);\n            hours = Math.max(0, hours);\n\n            // recordRemainingText'i oluşturuyoruz\n            if (days > 0) {\n                this.recordRemainingText = `${days} days`;\n            } else if (days <= 0 && hours > 0) {\n                this.recordRemainingText = `${hours} hours `;\n            }\n\n            // recordStatus ve recordStatusColor'u ayarlıyoruz\n            const now = new Date();\n            if (this.record.fields.is_cancelled) {\n                this.recordStatus = 'Cancelled';\n                this.recordStatusColor = '#ff0000'; // Turuncu\n            } else if (end > now) {\n                this.recordStatus = 'Upcoming';\n                this.recordStatusColor = '#ffa500'; // Kırmızı\n            } else {\n                this.recordStatus = 'Completed';\n                this.recordStatusColor = '#008000'; // Yeşil\n            }\n        },\n        formatAppointmentDate(dateString) {\n            const date = new Date(dateString);\n            const day = String(date.getUTCDate()).padStart(2, '0');\n            const month = String(date.getUTCMonth() + 1).padStart(2, '0'); // getUTCMonth() 0-11 arası değer döner, bu yüzden +1 eklenir\n            const year = date.getUTCFullYear();\n            const hours = String(date.getUTCHours()).padStart(2, '0');\n            const minutes = String(date.getUTCMinutes()).padStart(2, '0');\n\n            return `${day}/${month}/${year} ${hours}:${minutes}`;\n        }\n\n    }\n};\n</script>\n"],"mappings":"AAyDA;;AAEA;EACA;EACA;EACA;EACAA,KAAA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,iBAAA;MACAC,mBAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,6BAAA;EACA;EAEAC,OAAA;IACAD,8BAAA;MACA;MACA,MAAAE,KAAA,OAAAC,IAAA;MACA,MAAAC,GAAA,OAAAD,IAAA,MAAAE,MAAA,CAAAC,MAAA,CAAAC,gBAAA;MAEA,IAAAC,UAAA,GAAAJ,GAAA,GAAAF,KAAA;MAEA,MAAAO,qBAAA;MACA,MAAAC,gBAAA;MACA,MAAAC,cAAA;MACA,MAAAC,WAAA;MAEA,IAAAC,YAAA,GAAAL,UAAA,GAAAC,qBAAA;MACAD,UAAA,IAAAA,UAAA,GAAAK,YAAA,IAAAJ,qBAAA;MACA,IAAAK,OAAA,GAAAN,UAAA,GAAAE,gBAAA;MACAF,UAAA,IAAAA,UAAA,GAAAM,OAAA,IAAAJ,gBAAA;MACA,IAAAK,OAAA,GAAAP,UAAA,GAAAG,cAAA;MACAH,UAAA,IAAAA,UAAA,GAAAO,OAAA,IAAAJ,cAAA;MACA,IAAAK,KAAA,GAAAR,UAAA,GAAAI,WAAA;MACA,IAAAK,IAAA,IAAAT,UAAA,GAAAQ,KAAA,IAAAJ,WAAA;;MAEA;MACAK,IAAA,GAAAC,IAAA,CAAAC,GAAA,IAAAF,IAAA;MACAD,KAAA,GAAAE,IAAA,CAAAC,GAAA,IAAAH,KAAA;;MAEA;MACA,IAAAC,IAAA;QACA,KAAAnB,mBAAA,MAAAmB,IAAA;MACA,WAAAA,IAAA,SAAAD,KAAA;QACA,KAAAlB,mBAAA,MAAAkB,KAAA;MACA;;MAEA;MACA,MAAAI,GAAA,OAAAjB,IAAA;MACA,SAAAE,MAAA,CAAAC,MAAA,CAAAe,YAAA;QACA,KAAAzB,YAAA;QACA,KAAAC,iBAAA;MACA,WAAAO,GAAA,GAAAgB,GAAA;QACA,KAAAxB,YAAA;QACA,KAAAC,iBAAA;MACA;QACA,KAAAD,YAAA;QACA,KAAAC,iBAAA;MACA;IACA;IACAyB,sBAAAC,UAAA;MACA,MAAAC,IAAA,OAAArB,IAAA,CAAAoB,UAAA;MACA,MAAAE,GAAA,GAAAC,MAAA,CAAAF,IAAA,CAAAG,UAAA,IAAAC,QAAA;MACA,MAAAC,KAAA,GAAAH,MAAA,CAAAF,IAAA,CAAAM,WAAA,QAAAF,QAAA;MACA,MAAAG,IAAA,GAAAP,IAAA,CAAAQ,cAAA;MACA,MAAAhB,KAAA,GAAAU,MAAA,CAAAF,IAAA,CAAAS,WAAA,IAAAL,QAAA;MACA,MAAAb,OAAA,GAAAW,MAAA,CAAAF,IAAA,CAAAU,aAAA,IAAAN,QAAA;MAEA,UAAAH,GAAA,IAAAI,KAAA,IAAAE,IAAA,IAAAf,KAAA,IAAAD,OAAA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}