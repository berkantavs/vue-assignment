{"ast":null,"code":"import axiosInstance from '../axiosConfig';\nexport const fetchRecords = async tableName => {\n  try {\n    const response = await axiosInstance.get(`/${tableName}`);\n    return response.data.records;\n  } catch (error) {\n    console.error('Error fetching records:', error);\n    throw error;\n  }\n};\nexport const createRecords = async (tableName, records, typecast = false) => {\n  try {\n    const response = await axiosInstance.post(`/${tableName}`, {\n      records: records.map(record => ({\n        fields: record\n      })),\n      typecast: typecast\n    });\n    return response.data.records;\n  } catch (error) {\n    console.error('Error creating records:', error);\n    throw error;\n  }\n};\nexport const updateRecords = async (tableName, records) => {\n  try {\n    const response = await axiosInstance.patch(`/${tableName}`, {\n      records: records.map(record => ({\n        id: record.id,\n        fields: record.fields\n      }))\n    });\n    return response.data.records;\n  } catch (error) {\n    console.error('Error updating records:', error);\n    throw error;\n  }\n};\n\n// Diğer API işlemleri için benzer fonksiyonlar ekleyebilirsiniz","map":{"version":3,"names":["axiosInstance","fetchRecords","tableName","response","get","data","records","error","console","createRecords","typecast","post","map","record","fields","updateRecords","patch","id"],"sources":["/Users/berkant.avsar/Desktop/assignment/src/services/appointmentsService.js"],"sourcesContent":["import axiosInstance from '../axiosConfig';\n\nexport const fetchRecords = async (tableName) => {\n  try {\n    const response = await axiosInstance.get(`/${tableName}`);\n    return response.data.records;\n  } catch (error) {\n    console.error('Error fetching records:', error);\n    throw error;\n  }\n};\n\nexport const createRecords = async (tableName, records, typecast = false) => {\n  try {\n    const response = await axiosInstance.post(`/${tableName}`, {\n      records: records.map(record => ({ fields: record })),\n      typecast: typecast\n    });\n    return response.data.records;\n  } catch (error) {\n    console.error('Error creating records:', error);\n    throw error;\n  }\n};\n\nexport const updateRecords = async (tableName, records) => {\n  try {\n    const response = await axiosInstance.patch(`/${tableName}`, {\n      records: records.map(record => ({\n        id: record.id,\n        fields: record.fields\n      }))\n    });\n    return response.data.records;\n  } catch (error) {\n    console.error('Error updating records:', error);\n    throw error;\n  }\n};\n\n// Diğer API işlemleri için benzer fonksiyonlar ekleyebilirsiniz\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,gBAAgB;AAE1C,OAAO,MAAMC,YAAY,GAAG,MAAOC,SAAS,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,aAAa,CAACI,GAAG,CAAC,IAAIF,SAAS,EAAE,CAAC;IACzD,OAAOC,QAAQ,CAACE,IAAI,CAACC,OAAO;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAOP,SAAS,EAAEI,OAAO,EAAEI,QAAQ,GAAG,KAAK,KAAK;EAC3E,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMH,aAAa,CAACW,IAAI,CAAC,IAAIT,SAAS,EAAE,EAAE;MACzDI,OAAO,EAAEA,OAAO,CAACM,GAAG,CAACC,MAAM,KAAK;QAAEC,MAAM,EAAED;MAAO,CAAC,CAAC,CAAC;MACpDH,QAAQ,EAAEA;IACZ,CAAC,CAAC;IACF,OAAOP,QAAQ,CAACE,IAAI,CAACC,OAAO;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAG,MAAAA,CAAOb,SAAS,EAAEI,OAAO,KAAK;EACzD,IAAI;IACF,MAAMH,QAAQ,GAAG,MAAMH,aAAa,CAACgB,KAAK,CAAC,IAAId,SAAS,EAAE,EAAE;MAC1DI,OAAO,EAAEA,OAAO,CAACM,GAAG,CAACC,MAAM,KAAK;QAC9BI,EAAE,EAAEJ,MAAM,CAACI,EAAE;QACbH,MAAM,EAAED,MAAM,CAACC;MACjB,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,OAAOX,QAAQ,CAACE,IAAI,CAACC,OAAO;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}